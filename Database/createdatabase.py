import sqlite3

folder = '/Users/sethrojas/documents/codeprojects/baresearch/Torvik-CSVs'

conn = sqlite3.connect('rosteriq.db')

c = conn.cursor()

c.execute('''
CREATE TABLE IF NOT EXISTS Players2 (
    player_id INTEGER PRIMARY KEY, 
    player_name VARCHAR(30),
    hometown VARCHAR(20),
    state_or_country VARCHAR(20),
    country VARCHAR(30) DEFAULT 'USA'
);
''')

# c.execute(''' CREATE TABLE IF NOT EXISTS Teams
#                 (
#                 team_name VARCHAR(30) PRIMARY KEY,
#                 town VARCHAR(20),
#                 state VARCHAR(30)
#                 );

# ''')

# c.execute(""" CREATE TABLE IF NOT EXISTS Team_Seasons (
#             team_name VARCHAR(30),
#             season_year INT,
#             pts_pg FLOAT,
#             oreb_pg FLOAT,
#             dreb_pg FLOAT,
#             treb_pg FLOAT,
#             ast_pg FLOAT,
#             stl_pg FLOAT,
#             blk_pg FLOAT,
#             eFG FLOAT,
#             eFG_off_rank INT,
#             eFG_def FLOAT,
#             eFG_def_rank INT,
#             ftr FLOAT,
#             ftr_rank INT,
#             ftr_def FLOAT,
#             ftr_def_rank INT,
#             or_percent FLOAT,
#             or_percent_rank INT,
#             dr_percent FLOAT,
#             dr_percent_rank INT,
#             to_percent FLOAT,
#             to_percent_rank INT,
#             to_percent_def FLOAT,
#             to_percent_def_rank INT,
#             three_percent FLOAT,
#             three_percent_rank INT,
#             three_def_percent FLOAT,
#             three_def_percent_rank INT,
#             two_percent FLOAT,
#             two_percent_rank INT,
#             two_def_percent FLOAT,
#             two_def_percent_rank INT,
#             ft_percent FLOAT,
#             ft_percent_rank INT,
#             ft_def_percent FLOAT,
#             ft_def_percent_rank INT,
#             three_rate FLOAT,
#             three_rate_rank INT,
#             three_rate_def FLOAT,
#             three_rate_def_rank INT,
#             arate FLOAT,
#             arate_rank INT,
#             arate_def FLOAT,
#             arate_def_rank INT,
#             unk1 FLOAT,
#             unk2 FLOAT,
#             unk3 FLOAT,
#             unk4 FLOAT,
#             ov_rank INT,
#             conf VARCHAR(10),
#             record VARCHAR(10),
#             adjoe FLOAT,
#             oe_rank INT,
#             adjde FLOAT,
#             de_rank INT,
#             barthag FLOAT,
#             barthag_rank INT,
#             proj_w FLOAT,
#             proj_l FLOAT,
#             pro_con_w FLOAT,
#             pro_con_l FLOAT,
#             con_rec VARCHAR(10),
#             sos FLOAT,
#             ncsos FLOAT,
#             consos FLOAT,
#             proj_sos FLOAT,
#             proj_noncon_sos FLOAT,
#             proj_con_sos FLOAT,
#             elite_sos FLOAT,
#             elite_noncon_sos FLOAT,
#             opp_oe FLOAT,
#             opp_de FLOAT,
#             opp_proj_oe FLOAT,
#             opp_proj_de FLOAT,
#             con_adj_oe FLOAT,
#             con_adj_de FLOAT,
#             qual_o FLOAT,
#             qual_d FLOAT,
#             qual_barthag FLOAT,
#             qual_games INT,
#             fun FLOAT,
#             conpf FLOAT,
#             conpa FLOAT,
#             conposs FLOAT,
#             cono FLOAT,
#             conde FLOAT,
#             consosremain FLOAT,
#             conf_win_percent FLOAT,
#             wab FLOAT,
#             wab_rank INT,
#             fun_rank INT,
#             adjt FLOAT,
#             FOREIGN KEY (team_name) REFERENCES Teams(team_name)
#             );
# """)

c.execute(''' 
    CREATE TABLE IF NOT EXISTS Player_Seasons2 (
        player_id INTEGER UNSIGNED,
        team_name VARCHAR(30),
        season_year INTEGER,
        player_year TINYINT UNSIGNED,
        games_played TINYINT UNSIGNED,
        height_inches TINYINT UNSIGNED,
        weight_lbs SMALLINT UNSIGNED,
        position VARCHAR(5),
        position_description VARCHAR(10),
        min_pg FLOAT,
        pts_pg FLOAT,
        ast_pg FLOAT,
        oreb_pg FLOAT,
        dreb_pg FLOAT,
        treb_pg FLOAT,
        stl_pg FLOAT,
        blk_pg FLOAT,
        efg_percent FLOAT,
        ts_percent FLOAT,
        usg_percent FLOAT,
        oreb_percent FLOAT,
        dreb_percent FLOAT,
        ast_percent FLOAT,
        tov_percent FLOAT,
        FTM INT,
        FTA INT,
        ft_percent FLOAT,
        ftr FLOAT,
        twoM INT,
        twoA INT,
        two_percent FLOAT,
        threeM INT,
        threeA INT,
        three_percent FLOAT,
        blk_percent FLOAT,
        stl_percent FLOAT,
        porpag FLOAT,
        adjoe FLOAT,
        pfr FLOAT,
        ast_tov_r FLOAT,
        rimM INT,
        rimA INT,
        rimshot_percent FLOAT,
        midM INT,
        midA INT,
        midshot_percent FLOAT,
        dunksM INT,
        dunksA INT,
        dunksshot_percent FLOAT,
        pick FLOAT,
        drtg FLOAT,
        adrtg FLOAT,
        dporpag FLOAT,
        stops FLOAT,
        bpm FLOAT,
        obpm FLOAT,
        dbpm FLOAT,
        gbpm FLOAT,
        ogbpm FLOAT,
        dgbpm FLOAT,
        FOREIGN KEY (player_id) REFERENCES Players2(player_id),
        FOREIGN KEY (team_name) REFERENCES Teams(team_name)
    );
''')

conn.commit()

conn.close()